{"version":3,"file":"static/js/17.a1f02faa.chunk.js","mappings":"8JAIe,SAASA,IAKpB,IAAMC,EAAM,UAGZC,GAA0BC,EAAAA,EAAAA,UAASC,aAAaC,QAAQJ,IAAKK,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAtDM,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAStB,OALAI,EAAAA,EAAAA,YAAU,WACNF,GAASJ,aAAaO,QAAQV,EAAKO,EACvC,GAAE,CAACA,IAGI,CAACA,EAAOC,EACnB,C,gKCjBMG,G,gBAAOC,EAAAA,OAAa,CACtBC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,WAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,eAAAA,qBAAAA,eAAAA,QAAYC,oBAIzBJ,EAAKK,aAAaC,QAAQC,KACtB,SAAAC,GAII,OAAOA,CACX,IACA,SAAAC,GAEI,OAAOC,QAAQC,OAAOF,EAC1B,IAGJT,EAAKK,aAAaO,SAASL,KACvB,SAAAK,GAGI,OAFAC,QAAQC,KAAK,OAAQF,GAEdA,CACX,IACA,SAAAH,GAEI,OAAOC,QAAQC,OAAOF,EAC1B,I,QAGJ,I,iCC3BA,IAAQM,EAAUC,EAAAA,EAAAA,MAEZC,EAAQ,CACV,CAACC,SAAU,cAAc,CAAC,EAAE,CAACA,SAAU,OA2K3C,MAnKC,WACG,IAAMC,EChBK,WAEX,IAAOC,EAASC,EAAAA,EAAAA,SAATD,MACPE,EAAoBC,EAAAA,EAAAA,UAAbC,GAA2B7B,EAAAA,EAAAA,GAAA2B,EAAA,GAAlB,GACVG,GACFC,EAAAA,EAAAA,MAACH,EAAAA,EAAI,CACDI,KAAK,SACLC,UAAU,EACVC,KAAML,EAAUM,SAAA,EAGpBC,EAAAA,EAAAA,KAACR,EAAAA,EAAAA,KAAS,CAERS,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCAAYL,UAE/CC,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAACC,QAAQN,EAAAA,EAAAA,KAACO,EAAAA,EAAY,CAACC,UAAU,wBAA0BC,YAAY,oDAE/ET,EAAAA,EAAAA,KAACR,EAAAA,EAAAA,KAAS,CAERS,KAAK,WACLC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCAAYL,UAE/CC,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CACJC,QAAQN,EAAAA,EAAAA,KAACU,EAAAA,EAAY,CAACF,UAAU,wBAChCG,KAAK,WACLF,YAAY,iCAMpB,OAAO,SAAAG,GAAc,IAAZC,EAAOD,EAAPC,QAELxB,EAAMyB,QAAQ,CACVC,MAAM,EAENC,MAAO,2BACPC,OAAQ,eACRC,KAAM,SAAAC,GAAc1B,EAAU2B,iBAAiBC,MAAK,SAAAC,GAAM,OAAET,EAAQS,EAAQH,EAAU,IAAEI,MAAMzC,QAAQC,KAAK,EAC3GW,QAAAA,GAER,CAEJ,CD5BkB8B,GACdC,EAAyBnC,EAAAA,EAAAA,SAATD,GAAFoC,EAAPrB,QAAcqB,EAALpC,OAChBE,EAAiBC,EAAAA,EAAAA,UAAVkC,GAAwB9D,EAAAA,EAAAA,GAAA2B,EAAA,GAAlB,GACPG,GACFM,EAAAA,EAAAA,KAACR,EAAAA,EAAI,CACDK,UAAU,EAGV8B,SAAU,CAACC,KAAK,GAChBC,WAAY,CAACD,KAAK,IAClB9B,KAAM4B,EACNI,SAAU,SAAAC,GAAC,OAAEjD,QAAQkD,IAAID,EAAE,EAAChC,UAG5BC,EAAAA,EAAAA,KAACR,EAAAA,EAAAA,KAAS,CACNyC,MAAM,WACNhC,KAAK,WAELC,MAAO,CACH,CACIC,UAAS,EACTC,QAAQ,SAEdL,UAEFC,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAACI,YAAY,iBAUzByB,EAAU,SAACC,GAGbT,EAAOU,cAAc,WAAYD,EAAMhD,UACvCL,QAAQC,KAAK,cACbM,EAAMyB,QAAQ,CACVC,MAAK,EACLsB,WAAW,EACXrB,MAAO,QAEPtB,QAASA,EACTwB,KAAM,SAACoB,GAASZ,EAAON,iBAAiBC,MAAK,kBAAIiB,GAAO,IAAEf,OAAM,SAAAgB,GAAI,OAAEzD,QAAQC,KAAKwD,EAAK,GAAC,GAQjG,EAGA,OAEI5C,EAAAA,EAAAA,MAAA6C,EAAAA,SAAA,CAAAzC,SAAA,EAGIC,EAAAA,EAAAA,KAACyC,EAAAA,GAAM,CAACC,QAAS,kBAAKtD,EAAM,CAACyB,QAAS,SAACS,EAAQqB,GAAY7D,QAAQkD,IAAIV,GAA6B,UAApBA,EAAOnC,UAAwBwD,GAAS,GAAG,EAAC5C,SAAC,SAC/HC,EAAAA,EAAAA,KAAChB,EAAK,CAAC4D,MAAO,EAAE7C,SAAC,iCACjBC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,CACRC,SAAU,SAAAf,GAAC,OAAEjD,QAAQkD,IAAID,EAAE,EAC3BgB,OAAK,EACLC,QAAS,CAaL,CACIf,OAAOjC,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CACLjC,MAAM,qBACNnD,MAAO,GACPqF,WAAY,CACRC,MAAO,aAGvBtF,MAAO,QAEX,CACIoE,OAAOjC,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CACLjC,MAAM,qBACNnD,MAAO,OACPqF,WAAY,CACRC,MAAO,aAGvBtF,MAAO,QAEX,CACIoE,OAAOjC,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CACLjC,MAAM,qBACNnD,MAAO,EACPqF,WAAY,CACRC,MAAO,aAGvBtF,MAAO,QAEX,CACIoE,OAAOjC,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CACLjC,MAAM,qBACNnD,MAAO,EACPqF,WAAY,CACRC,MAAO,aAGvBtF,MAAO,YAKnBmC,EAAAA,EAAAA,KAAChB,EAAK,CAAC4D,MAAO,EAAE7C,SAAC,kBACjBC,EAAAA,EAAAA,KAACoD,EAAAA,GAAI,CACDC,WAAY,CAERC,SAAS,GACTC,QAAQ,EACRC,SAAU,SACVC,MAAO,OAMXC,WAAYxE,EACZyE,WACI,SAAA9F,GAAK,OACL8B,EAAAA,EAAAA,MAACyD,EAAAA,GAAAA,KAAS,CACNQ,QAAS,EAAC5D,EAAAA,EAAAA,KAAA,KAAAD,SAAG,OAAMC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,OAAOA,SAAA,EAO7BJ,EAAAA,EAAAA,MAAC8C,EAAAA,GAAM,CAACoB,MAAO,CAACC,KAAK,GAAIpB,QAAS,kBAAIR,EAAQrE,EAAM,EAACkC,SAAA,CAAC,IAAElC,EAAMsB,SAAS,QACvEQ,EAAAA,EAAAA,MAAC8C,EAAAA,GAAM,CAACoB,MAAO,CAACC,KAAK,GAAIpB,QAAS,kBAAIR,EAAQrE,EAAM,EAACkC,SAAA,CAAC,IAAElC,EAAMsB,SAAS,QACvEQ,EAAAA,EAAAA,MAAC8C,EAAAA,GAAM,CAACoB,MAAO,CAACC,KAAK,GAAIpB,QAAS,kBAAIR,EAAQrE,EAAM,EAACkC,SAAA,CAAC,IAAElC,EAAMsB,SAAS,SAC/D,MAQ5B,C","sources":["hooks/useAPIKey.js","utils/http.js","pages/about/index.js","comp/login.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nexport default function useAPIKey(){\r\n\r\n    // get from localstorage\r\n    // set to localstorage\r\n    //\r\n    const KEY = \"API_KEY\"\r\n\r\n    // get Default\r\n    const [value, setValue] = useState(localStorage.getItem(KEY));\r\n    // const [value, setValue] = useState(defaultValue);\r\n\r\n    // sync up to localstorage\r\n    useEffect(()=>{\r\n        value && localStorage.setItem(KEY, value);\r\n    },[value]);\r\n\r\n    // return\r\n    return [value, setValue];\r\n}","import axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst http = axios.create({\r\n    baseURL: process.env.REACT_APP_BE_API\r\n});\r\n\r\n\r\nhttp.interceptors.request.use(\r\n    config => {\r\n\r\n\r\n        // todo\r\n        return config;\r\n    },\r\n    error => {\r\n  \r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nhttp.interceptors.response.use(\r\n    response => {\r\n        console.info(\"ires\", response)\r\n   \r\n        return response;\r\n    },\r\n    error => {\r\n     \r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default http","import { ArrowDownOutlined, ArrowUpOutlined } from '@ant-design/icons';\r\nimport { App, Avatar, Button, Divider, Form, Input, List, Row, Col,Card, Statistic, Segmented, Typography } from \"antd\"\r\nimport useAPIKey from \"../../hooks/useAPIKey\"\r\nimport axios from \"axios\";\r\nimport http from \"../../utils/http\";\r\nimport InnerForm from \"../../comp/innerForm\";\r\nimport useLogin from '../../comp/login';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst udata = [\r\n    {username: 'usdfsfsdf1'},{},{username: 'u3'},\r\n    // {username: 'u1'},{username: 'u2'},{username: 'u3'},\r\n    // {username: 'u1'},{username: 'u2'},{username: 'u3'},\r\n    // {username: 'u1'},{username: 'u2'},{username: 'u3'}\r\n\r\n];\r\n\r\n\r\n function About() {\r\n    const login = useLogin();\r\n    const {message, modal} = App.useApp();\r\n    const [myform] = Form.useForm();\r\n    const content = (\r\n        <Form\r\n            preserve={false}\r\n            // layout='inline's\r\n            // layout='horizontal'\r\n            labelCol={{span:1}}\r\n            wrapperCol={{span:10}}\r\n            form={myform}\r\n            onFinish={e=>console.log(e)}\r\n        >\r\n\r\n            <Form.Item\r\n                label=\"Username\"\r\n                name='username'\r\n                // required\r\n                rules={[\r\n                    {\r\n                        required:true,\r\n                        message:\"cano\"\r\n                    }\r\n                ]}\r\n                >\r\n                <Input placeholder=\"Username\"/>\r\n            </Form.Item>\r\n\r\n\r\n            {/* <Form.Item>\r\n                <Button htmlType=\"submit\">Submit</Button>\r\n            </Form.Item> */}\r\n        </Form>\r\n    )\r\n \r\n    const myModal = (param)=>{\r\n\r\n        \r\n        myform.setFieldValue('username', param.username)\r\n        console.info(\"moda start\")\r\n        modal.confirm({\r\n            icon:true,\r\n            closeIcon: false,\r\n            title: 'title',\r\n            // content: <InnerForm {...param} />,\r\n            content: content,\r\n            onOk: (close)=>{myform.validateFields().then(()=>close()).catch(eror=>console.info(eror))}\r\n            // onOk: (close)=>{myform.validateFields().then(()=>close()).catch(eror=>console.info(eror))}\r\n            // onOk: (close)=> Promise.reject(\"reje\")\r\n            // onOk: ()=>{ Promise.resolve(\"reje\").catch(()=> false && console.info('info'))}\r\n            // onOk: (close)=>{console.log(\"here\"); myform.validateFields().then(()=>close()).catch(eror=>console.info(eror))}\r\n            // onOk: (close)=>{console.info(close) ;}\r\n         \r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n  \r\n        <>\r\n\r\n\r\n            <Button onClick={()=> login({onLogin: (values, closef)=> { console.log(values); values.username === 'solar' && closef();}})}>ENV</Button>\r\n          <Title level={5}>看板 & 概要</Title>\r\n          <Segmented\r\n            onChange={e=>console.log(e)}\r\n            block\r\n            options={[\r\n                // {\r\n                //     label: <Card bordered={false}>\r\n                //                 <Statistic\r\n                //                 title=\"待尾款\"\r\n                //                 value={9.3}\r\n                //                 valueStyle={{\r\n                //                     color: '#cf1322',\r\n                //                 }}\r\n                //                 />\r\n                //             </Card>,\r\n                //     value: \"car1\"\r\n                // },\r\n                {\r\n                    label: <Statistic\r\n                                title=\"洽谈中\"\r\n                                value={10}\r\n                                valueStyle={{\r\n                                    color: '#3f8600',\r\n                                }}\r\n                                />,\r\n                    value: \"car2\"\r\n                },\r\n                {\r\n                    label: <Statistic\r\n                                title=\"样板中\"\r\n                                value={'3/10'}\r\n                                valueStyle={{\r\n                                    color: '#cf1322',\r\n                                }}\r\n                                />,\r\n                    value: \"car3\"\r\n                },\r\n                {\r\n                    label: <Statistic\r\n                                title=\"投产中\"\r\n                                value={9}\r\n                                valueStyle={{\r\n                                    color: '#cf1322',\r\n                                }}\r\n                                />,\r\n                    value: \"car4\"\r\n                },\r\n                {\r\n                    label: <Statistic\r\n                                title=\"待尾款\"\r\n                                value={7}\r\n                                valueStyle={{\r\n                                    color: '#cf1322',\r\n                                }}\r\n                                />,\r\n                    value: \"car5\"\r\n                }\r\n            ]}\r\n          />\r\n\r\n        <Title level={5}>清单</Title>\r\n        <List \r\n            pagination={{\r\n                \r\n                pageSize:20,\r\n                simple: true,\r\n                position: 'bottom',\r\n                align: 'end'\r\n        \r\n            }}\r\n\r\n            // itemLayout=\"vertical\"\r\n            // grid={{xs:1, sm:2, md: 4, lg:6}}\r\n            dataSource={udata}\r\n            renderItem={\r\n                value => \r\n                <List.Item\r\n                    actions={[<a>1</a>,<a>2</a>]}\r\n                >\r\n                    {/* <List.Item.Meta\r\n                    avatar={<Avatar src={value.avatar} />}\r\n                    title={<a href={value.username}>{value.username}</a>}\r\n                    description={value.username}\r\n                    /> */}\r\n                    <Button style={{flex:1}} onClick={()=>myModal(value)}> {value.username} </Button>\r\n                    <Button style={{flex:1}} onClick={()=>myModal(value)}> {value.username} </Button>\r\n                    <Button style={{flex:1}} onClick={()=>myModal(value)}> {value.username} </Button>\r\n                </List.Item>\r\n            }\r\n        />      \r\n        \r\n        \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default About","import { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { App, Form, Input } from \"antd\";\r\n\r\n\r\nexport default function useLogin(){\r\n\r\n    const {modal} = App.useApp();\r\n    const [loginForm] = Form.useForm();\r\n    const content = (\r\n        <Form\r\n            size='middle'\r\n            preserve={false}\r\n            form={loginForm}\r\n        >\r\n            \r\n        <Form.Item\r\n        //   label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: '请输入账号!' }]}\r\n        >\r\n          <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username / 账户 / 手机号\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n        //   label=\"密码\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: '请输入密码!' }]}\r\n        >\r\n          <Input\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password / 密码\"\r\n          />\r\n        </Form.Item>\r\n        </Form>\r\n    )\r\n\r\n    return ({onLogin})=>{\r\n\r\n        modal.confirm({\r\n            icon: true,\r\n            // closeIcon: false,\r\n            title: '用户登录',\r\n            okText: '登录',\r\n            onOk: closeForm => {loginForm.validateFields().then(values=>onLogin(values, closeForm)).catch(console.info)},\r\n            content\r\n        });\r\n    }\r\n\r\n}"],"names":["useAPIKey","KEY","_useState","useState","localStorage","getItem","_useState2","_slicedToArray","value","setValue","useEffect","setItem","http","axios","baseURL","process","REACT_APP_BE_API","interceptors","request","use","config","error","Promise","reject","response","console","info","Title","Typography","udata","username","login","modal","App","_Form$useForm","Form","loginForm","content","_jsxs","size","preserve","form","children","_jsx","name","rules","required","message","Input","prefix","UserOutlined","className","placeholder","LockOutlined","type","_ref","onLogin","confirm","icon","title","okText","onOk","closeForm","validateFields","then","values","catch","useLogin","_App$useApp","myform","labelCol","span","wrapperCol","onFinish","e","log","label","myModal","param","setFieldValue","closeIcon","close","eror","_Fragment","Button","onClick","closef","level","Segmented","onChange","block","options","Statistic","valueStyle","color","List","pagination","pageSize","simple","position","align","dataSource","renderItem","actions","style","flex"],"sourceRoot":""}