{"version":3,"file":"static/js/767.598e0670.chunk.js","mappings":"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","sources":["pages/studioStatictis/index.js","store/productStore.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { productStore } from \"../../store/productStore\"\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Card, Descriptions, Divider, InputNumber, List, Progress, Select, Space, Typography } from \"antd\";\r\n\r\n\r\n\r\nfunction StudioStatictis(){\r\n    //\r\n    const {statistic701Period,statistic701PeriodFilter, statistic701Producer, statistic701ProducerFilter, statistic701, get701Statistic} = productStore;\r\n    const [salary, setSalary] = useState(7500)\r\n\r\n    //\r\n    useEffect(\r\n        ()=>{\r\n            get701Statistic();\r\n        },\r\n        []\r\n    );\r\n\r\n    const filterList = () =>{\r\n        return statistic701\r\n        .filter(v=>v.period === statistic701PeriodFilter)\r\n        .filter(v=>v.producer === statistic701ProducerFilter);\r\n    }\r\n\r\n    const totalCost = () =>{\r\n        let cost = 0;\r\n        let count = 0;\r\n\r\n        //\r\n        filterList().forEach(element => {\r\n            cost += element.cost;\r\n            count += element.count;\r\n        });\r\n\r\n        return {cost, count};\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <>\r\n        <Divider orientation=\"left\">统计</Divider>\r\n\r\n\r\n        <Space direction=\"vertical\" style={{display: 'flex'}}> \r\n\r\n        <Card>\r\n\r\n        <Space>\r\n        <Typography.Text >板期</Typography.Text>\r\n        <Select  placeholder=\"请选择\"  style={{width:'100px'}}  value={statistic701PeriodFilter} onChange={value => productStore.statistic701PeriodFilter = value} options={statistic701Period?.map(value=>({value, label:value}))} />\r\n  \r\n        <Typography.Text >板师</Typography.Text>\r\n        <Select  placeholder=\"请选择\" style={{width:'100px'}} value={statistic701ProducerFilter} onChange={value => productStore.statistic701ProducerFilter = value} options={statistic701Producer?.map(value=>({value, label:value}))} />\r\n\r\n        \r\n       \r\n        </Space>\r\n        </Card>\r\n    \r\n        <Card>\r\n            <Space>\r\n        <Typography.Text >薪资</Typography.Text>\r\n            <InputNumber style={{width:'100px'}} value={salary} onChange={setSalary}/>\r\n            </Space>\r\n        </Card>\r\n\r\n        <Card title={<Space>\r\n            {statistic701PeriodFilter} {statistic701ProducerFilter} {totalCost().cost}时 {totalCost().count}件\r\n            </Space>}>\r\n        <List\r\n            \r\n            dataSource={filterList()}\r\n            \r\n            renderItem={\r\n                record=>\r\n                <List.Item>\r\n\r\n                    <Descriptions column={2}>\r\n\r\n                        <Descriptions.Item label={record.agent}>\r\n                            {Math.round(record.cost / totalCost().cost * salary * 100)/100} 元\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label={`${record.cost}时 / ${record.count}件`}>\r\n                            <Progress strokeColor={{'0%':'#006564', '100%':'#87d068'}} percent={Math.round( record.cost / totalCost().cost * 10000)/100}/>\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                </List.Item>\r\n            }\r\n            \r\n            />\r\n        </Card>\r\n        </Space>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default observer(StudioStatictis)","import { makeAutoObservable } from \"mobx\";\r\nimport http from \"../utils/http\";\r\nimport { userStore } from \"./userStore\";\r\n\r\nclass ProductStore{\r\n\r\n    filterTemplate = [\r\n        {key: 'pending', title: '洽谈中', value:0, color: '#3f8600'},\r\n        {key: 'studio', title: '样板中', value:0, color: '#f56a00'},\r\n        {key: 'factory', title: '投产中', value:0, color: '#f56a00'},\r\n        {key: 'paid', title: '待尾款', value:0, color: '#cf1322'},\r\n    ]\r\n    filter = 'pending'\r\n    product = {}\r\n    products = []\r\n    studio701Products = []\r\n    statistic701 = []\r\n    statistic701Period =[]\r\n    statistic701PeriodFilter = '';\r\n    statistic701Producer = []\r\n    statistic701ProducerFilter = '';\r\n\r\n    paymentDetail = {}\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n\r\n        userStore.isLogin && this.index()\r\n    }\r\n\r\n    // 701 statistic \r\n    get701Statistic =()=>{\r\n        http.get('/statistic/studio/701')\r\n        .then(res => {\r\n            this.statistic701 = [...res.data]\r\n            this.statistic701Period = [...new Set(this.statistic701.map(v=>v.period))]\r\n            this.statistic701Producer = [...new Set(this.statistic701.map(v=>v.producer))]\r\n\r\n            this.statistic701PeriodFilter = this.statistic701PeriodFilter || this.statistic701Period.at(-1);\r\n            this.statistic701ProducerFilter = this.statistic701ProducerFilter || this.statistic701Producer.at(-1);\r\n\r\n\r\n            \r\n            console.log(this.statistic701Period)\r\n            console.log(this.statistic701Producer)\r\n        }\r\n        )\r\n        .catch(console.log);\r\n    }\r\n    //\r\n    get701Products = () => {\r\n        http.get('product/701')\r\n        .then( res => {\r\n            this.studio701Products = [...res.data]\r\n            \r\n        })\r\n        .catch(console.log);\r\n    }\r\n\r\n    // snap\r\n    setPaymentDetail = (obj) => {\r\n        this.paymentDetail = {...obj}\r\n    }\r\n    selectd = (object) => {\r\n        this.product = {...object}\r\n    }\r\n\r\n    fallbackStatus = (productId)=>{\r\n        http.get(`product/${productId}/fallbackStatus`)\r\n        .then(res=>{\r\n            this.products = [...this.products.filter(item=> item.id !== productId), res.data]\r\n        })\r\n        .catch(console.log);\r\n    }\r\n\r\n\r\n    updateFilter = value => this.filter = value\r\n\r\n    get getFilterTemplate(){\r\n\r\n        this.filterTemplate.forEach(\r\n            value => {\r\n                value.value = this.products.filter(item => item.productStatus === value.key).length;\r\n            }\r\n        )\r\n\r\n        return this.filterTemplate;\r\n    }\r\n\r\n    new = () => {\r\n        http.post('product', {})\r\n        .then(res => {\r\n            this.products = [...this.products, res.data]\r\n        })\r\n        .catch(console.log);\r\n    }\r\n\r\n    updateProduct = (basic) =>{\r\n        http.put('product', basic)\r\n        .then(res=>{\r\n          \r\n            this.products = [...this.products.filter(obj=>obj.id !== res.data.id), res.data]\r\n            // this.products = [...this.products.filter(obj=>obj.id !== res.data.id), res.data]\r\n            this.product ={...res.data}\r\n        })\r\n        .catch(console.log);\r\n    }\r\n\r\n    index = () => {\r\n\r\n        http.get('product')\r\n        .then(res => {\r\n            this.products = [...res.data]\r\n            // message.info('success')\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            // message.error(error?.response?.data?.message);\r\n        })\r\n    }\r\n\r\n\r\n    del = (id) => {\r\n        http.delete(`product/${id}`).then(\r\n            res => this.products.splice(this.products.findIndex(value=>value.id === id),1)\r\n        ).catch(console.log)\r\n    }\r\n\r\n    getByFilter = () => {\r\n\r\n        let listfilter = this.products.filter(item => item.productStatus === this.filter);\r\n        switch (this.filter) {\r\n            case 'pending':\r\n                // return listfilter.sort((a,b)=> a.cdate - b.cdate);\r\n            case 'studio':\r\n                // return listfilter.sort((a,b) => a.sampleOrder.manufactureDates - b.sampleOrder.manufactureDates)\r\n            case 'factory':\r\n                // return listfilter.sort((a,b) => a.mdate - b.mdate)\r\n                return listfilter.sort((a,b)=> a.cdate - b.cdate);\r\n                \r\n            default:\r\n                return listfilter\r\n        }\r\n\r\n        \r\n    }\r\n    // sample & studio\r\n    updateStudio = (id) => {\r\n\r\n        console.log(id)\r\n        http.put(`product/${this.product.id}/studio`, {id})\r\n        .then(res=> {\r\n            this.product = {...this.product,  sampleOrder: res.data}\r\n            this.products.splice(this.products.findIndex(v=>v.id === this.product.id), 1, this.product)\r\n        \r\n        })\r\n        .catch(console.log)\r\n    }\r\n\r\n    updateStudioDetail = (productId, requestBody)=>{\r\n        http.put(`product/${productId}/sample`, requestBody)\r\n        .then(res=> this.get701Products())\r\n        .catch(console.log);\r\n    }\r\n\r\n    // Payment \r\n    newPayment = (productId, requestBody) => {\r\n        http.post(`product/${productId}/payment`, {...requestBody})\r\n        .then(res=>{\r\n            \r\n            // for (const iterator of this.products) {\r\n            //     if(iterator.id === productId)\r\n            //         iterator.payments.push({...res.data})\r\n            // }\r\n\r\n            this.product.payments.push({...res.data})\r\n          \r\n        })\r\n        .catch(console.error);\r\n    }\r\n\r\n    updatePayment = (productId, requestBody, callbk) => {\r\n        http.put(`product/${productId}/payment`, {...requestBody})\r\n        .then(res=>{\r\n            \r\n            const payment = res.data;\r\n            // for (const iterator of this.products) {\r\n            //     if(iterator.id === productId){\r\n            //         let index = iterator.payments.findIndex(value => value.id === payment.id);\r\n            //         iterator.payments.splice(index, 1, {...payment})\r\n\r\n            //     }\r\n\r\n            // }\r\n            let index = this.product.payments.findIndex(value => value.id === payment.id);\r\n            this.product.payments.splice(index, 1, {...payment})\r\n\r\n            //\r\n            callbk();\r\n        })\r\n        .catch(console.error);\r\n    }\r\n\r\n    deletePayment = (productId, paymentId) => {\r\n        http.delete(`product/${productId}/payment/${paymentId}`)\r\n        .then(res=>{\r\n\r\n            // for (const iterator of this.products) {\r\n            //     if(iterator.id === productId){\r\n            //         let index = iterator.payments.findIndex(value => value.id === paymentId);\r\n            //         iterator.payments.splice(index, 1)\r\n            //     }\r\n            // }\r\n            let index = this.product.payments.findIndex(value => value.id === paymentId);\r\n            this.product.payments.splice(index, 1)\r\n        })\r\n        .catch(console.error);\r\n    }\r\n\r\n    // payment\r\n\r\n    // CustOrder \r\n    newCustOrder = (productId, requestBody) => {\r\n        http.post(`product/${productId}/custOrder`, {...requestBody})\r\n        .then(res=>{\r\n            \r\n            // for (const iterator of this.products) {\r\n            //     if(iterator.id === productId)\r\n            //         iterator.custOrders.push({...res.data})\r\n            // }\r\n            this.product.custOrders.push({...res.data})\r\n\r\n          \r\n        })\r\n        .catch(console.error);\r\n    }\r\n\r\n    updateCustOrder= (productId, requestBody, callbk) => {\r\n        http.put(`product/${productId}/custOrder`, {...requestBody})\r\n        .then(res=>{\r\n            \r\n            const payment = res.data;\r\n            // for (const iterator of this.products) {\r\n            //     if(iterator.id === productId){\r\n            //         let index = iterator.custOrders.findIndex(value => value.id === payment.id);\r\n            //         iterator.custOrders.splice(index, 1, {...payment})\r\n                    \r\n            //     }\r\n                \r\n            // }\r\n            let index = this.product.custOrders.findIndex(value => value.id === payment.id);\r\n            this.product.custOrders.splice(index, 1, {...payment})\r\n            //\r\n            callbk();\r\n        })\r\n        .catch(console.error);\r\n    }\r\n\r\n    deleteCustOrder = (productId, paymentId) => {\r\n        http.delete(`product/${productId}/custOrder/${paymentId}`)\r\n        .then(res=>{\r\n\r\n            // for (const iterator of this.products) {\r\n            //     if(iterator.id === productId){\r\n            //         let index = iterator.custOrders.findIndex(value => value.id === paymentId);\r\n            //         iterator.custOrders.splice(index, 1)\r\n            //     }\r\n            // }\r\n            let index = this.product.custOrders.findIndex(value => value.id === paymentId);\r\n            this.product.custOrders.splice(index, 1)\r\n           \r\n        })\r\n        .catch(console.error);\r\n    }\r\n\r\n    // CustOrder\r\n\r\n    // Materials \r\n    newMaterials = (productId, requestBody) => {\r\n        http.post(`product/${productId}/material`, {...requestBody})\r\n        .then(res=>{\r\n            \r\n            // for (const iterator of this.products) {\r\n            //     if(iterator.id === productId)\r\n            //         iterator.materials.push({...res.data})\r\n            // }\r\n                \r\n            this.product.materials.push({...res.data})\r\n          \r\n            }\r\n        )\r\n        .catch(console.error);\r\n    }\r\n\r\n    updateMaterials= (productId, requestBody, callbk) => {\r\n        http.put(`product/${productId}/material`, {...requestBody})\r\n        .then(res=>{\r\n            \r\n            const payment = res.data;\r\n            // for (const iterator of this.products) {\r\n            //     if(iterator.id === productId){\r\n            //         let index = iterator.materials.findIndex(value => value.id === payment.id);\r\n            //         iterator.materials.splice(index, 1, {...payment})\r\n            //     }\r\n            // }\r\n            let index = this.product.materials.findIndex(value => value.id === payment.id);\r\n            this.product.materials.splice(index, 1, {...payment})\r\n            //\r\n            callbk();\r\n        })\r\n        .catch(console.error);\r\n    }\r\n\r\n    deleteMaterials = (productId, paymentId) => {\r\n        http.delete(`product/${productId}/material/${paymentId}`)\r\n        .then(res=>{\r\n\r\n            // for (const iterator of this.products) {\r\n            //     if(iterator.id === productId){\r\n            //         let index = iterator.materials.findIndex(value => value.id === paymentId);\r\n            //         iterator.materials.splice(index, 1)\r\n            //     }\r\n            // }\r\n            let index = this.product.materials.findIndex(value => value.id === paymentId);\r\n            this.product.materials.splice(index, 1)\r\n            \r\n        })\r\n        .catch(console.error);\r\n    }\r\n\r\n    // CustOrder\r\n\r\n\r\n}\r\n\r\nexport const productStore = new ProductStore()"],"names":["observer","statistic701Period","productStore","statistic701PeriodFilter","statistic701Producer","statistic701ProducerFilter","statistic701","get701Statistic","_useState","useState","_useState2","_slicedToArray","salary","setSalary","useEffect","filterList","filter","v","period","producer","totalCost","cost","count","forEach","element","_jsxs","_Fragment","children","_jsx","Divider","orientation","Space","direction","style","display","Card","Typography","Select","placeholder","width","value","onChange","options","map","label","InputNumber","title","List","dataSource","renderItem","record","Descriptions","column","agent","Math","round","concat","Progress","strokeColor","percent","ProductStore","_this","_classCallCheck","filterTemplate","key","color","product","products","studio701Products","paymentDetail","http","then","res","_toConsumableArray","data","Set","at","console","log","catch","get701Products","setPaymentDetail","obj","_objectSpread","selectd","object","fallbackStatus","productId","item","id","updateFilter","new","updateProduct","basic","index","error","del","splice","findIndex","getByFilter","listfilter","productStatus","sort","a","b","cdate","updateStudio","sampleOrder","updateStudioDetail","requestBody","newPayment","payments","push","updatePayment","callbk","payment","deletePayment","paymentId","newCustOrder","custOrders","updateCustOrder","deleteCustOrder","newMaterials","materials","updateMaterials","deleteMaterials","makeAutoObservable","this","userStore","_createClass","get","_this2","length"],"sourceRoot":""}